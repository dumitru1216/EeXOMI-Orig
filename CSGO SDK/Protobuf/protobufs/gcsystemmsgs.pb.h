// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#ifndef PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
#define PROTOBUF_gcsystemmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gcsystemmsgs_2eproto();
void protobuf_AssignDesc_gcsystemmsgs_2eproto();
void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

class CMsgGCHVacVerificationChange;
class CMsgGCHAccountPhoneNumberChange;
class CMsgGCHInviteUserToLobby;
class CQuest_PublisherAddCommunityItemsToPlayer_Request;
class CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute;
class CQuest_PublisherAddCommunityItemsToPlayer_Response;
class CCommunity_GamePersonalDataCategoryInfo;
class CCommunity_GetGamePersonalDataCategories_Request;
class CCommunity_GetGamePersonalDataCategories_Response;
class CCommunity_GetGamePersonalDataEntries_Request;
class CCommunity_GetGamePersonalDataEntries_Response;
class CCommunity_TerminateGamePersonalDataEntries_Request;
class CCommunity_TerminateGamePersonalDataEntries_Response;

enum EGCSystemMsg {
  k_EGCMsgInvalid = 0,
  k_EGCMsgMulti = 1,
  k_EGCMsgGenericReply = 10,
  k_EGCMsgSystemBase = 50,
  k_EGCMsgAchievementAwarded = 51,
  k_EGCMsgConCommand = 52,
  k_EGCMsgStartPlaying = 53,
  k_EGCMsgStopPlaying = 54,
  k_EGCMsgStartGameserver = 55,
  k_EGCMsgStopGameserver = 56,
  k_EGCMsgWGRequest = 57,
  k_EGCMsgWGResponse = 58,
  k_EGCMsgGetUserGameStatsSchema = 59,
  k_EGCMsgGetUserGameStatsSchemaResponse = 60,
  k_EGCMsgGetUserStatsDEPRECATED = 61,
  k_EGCMsgGetUserStatsResponse = 62,
  k_EGCMsgAppInfoUpdated = 63,
  k_EGCMsgValidateSession = 64,
  k_EGCMsgValidateSessionResponse = 65,
  k_EGCMsgLookupAccountFromInput = 66,
  k_EGCMsgSendHTTPRequest = 67,
  k_EGCMsgSendHTTPRequestResponse = 68,
  k_EGCMsgPreTestSetup = 69,
  k_EGCMsgRecordSupportAction = 70,
  k_EGCMsgGetAccountDetails_DEPRECATED = 71,
  k_EGCMsgReceiveInterAppMessage = 73,
  k_EGCMsgFindAccounts = 74,
  k_EGCMsgPostAlert = 75,
  k_EGCMsgGetLicenses = 76,
  k_EGCMsgGetUserStats = 77,
  k_EGCMsgGetCommands = 78,
  k_EGCMsgGetCommandsResponse = 79,
  k_EGCMsgAddFreeLicense = 80,
  k_EGCMsgAddFreeLicenseResponse = 81,
  k_EGCMsgGetIPLocation = 82,
  k_EGCMsgGetIPLocationResponse = 83,
  k_EGCMsgSystemStatsSchema = 84,
  k_EGCMsgGetSystemStats = 85,
  k_EGCMsgGetSystemStatsResponse = 86,
  k_EGCMsgSendEmail = 87,
  k_EGCMsgSendEmailResponse = 88,
  k_EGCMsgGetEmailTemplate = 89,
  k_EGCMsgGetEmailTemplateResponse = 90,
  k_EGCMsgGrantGuestPass = 91,
  k_EGCMsgGrantGuestPassResponse = 92,
  k_EGCMsgGetAccountDetails = 93,
  k_EGCMsgGetAccountDetailsResponse = 94,
  k_EGCMsgGetPersonaNames = 95,
  k_EGCMsgGetPersonaNamesResponse = 96,
  k_EGCMsgMultiplexMsg = 97,
  k_EGCMsgMultiplexMsgResponse = 98,
  k_EGCMsgWebAPIRegisterInterfaces = 101,
  k_EGCMsgWebAPIJobRequest = 102,
  k_EGCMsgWebAPIJobRequestHttpResponse = 104,
  k_EGCMsgWebAPIJobRequestForwardResponse = 105,
  k_EGCMsgMemCachedGet = 200,
  k_EGCMsgMemCachedGetResponse = 201,
  k_EGCMsgMemCachedSet = 202,
  k_EGCMsgMemCachedDelete = 203,
  k_EGCMsgMemCachedStats = 204,
  k_EGCMsgMemCachedStatsResponse = 205,
  k_EGCMsgMasterSetDirectory = 220,
  k_EGCMsgMasterSetDirectoryResponse = 221,
  k_EGCMsgMasterSetWebAPIRouting = 222,
  k_EGCMsgMasterSetWebAPIRoutingResponse = 223,
  k_EGCMsgMasterSetClientMsgRouting = 224,
  k_EGCMsgMasterSetClientMsgRoutingResponse = 225,
  k_EGCMsgSetOptions = 226,
  k_EGCMsgSetOptionsResponse = 227,
  k_EGCMsgSystemBase2 = 500,
  k_EGCMsgGetPurchaseTrustStatus = 501,
  k_EGCMsgGetPurchaseTrustStatusResponse = 502,
  k_EGCMsgUpdateSession = 503,
  k_EGCMsgGCAccountVacStatusChange = 504,
  k_EGCMsgCheckFriendship = 505,
  k_EGCMsgCheckFriendshipResponse = 506,
  k_EGCMsgGetPartnerAccountLink = 507,
  k_EGCMsgGetPartnerAccountLinkResponse = 508,
  k_EGCMsgDPPartnerMicroTxns = 512,
  k_EGCMsgDPPartnerMicroTxnsResponse = 513,
  k_EGCMsgVacVerificationChange = 518,
  k_EGCMsgAccountPhoneNumberChange = 519,
  k_EGCMsgInviteUserToLobby = 523,
  k_EGCMsgGetGamePersonalDataCategoriesRequest = 524,
  k_EGCMsgGetGamePersonalDataCategoriesResponse = 525,
  k_EGCMsgGetGamePersonalDataEntriesRequest = 526,
  k_EGCMsgGetGamePersonalDataEntriesResponse = 527,
  k_EGCMsgTerminateGamePersonalDataEntriesRequest = 528,
  k_EGCMsgTerminateGamePersonalDataEntriesResponse = 529
};
bool EGCSystemMsg_IsValid(int value);
const EGCSystemMsg EGCSystemMsg_MIN = k_EGCMsgInvalid;
const EGCSystemMsg EGCSystemMsg_MAX = k_EGCMsgTerminateGamePersonalDataEntriesResponse;
const int EGCSystemMsg_ARRAYSIZE = EGCSystemMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor();
inline const ::std::string& EGCSystemMsg_Name(EGCSystemMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCSystemMsg_descriptor(), value);
}
inline bool EGCSystemMsg_Parse(
    const ::std::string& name, EGCSystemMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCSystemMsg>(
    EGCSystemMsg_descriptor(), name, value);
}
enum ESOMsg {
  k_ESOMsg_Create = 21,
  k_ESOMsg_Update = 22,
  k_ESOMsg_Destroy = 23,
  k_ESOMsg_CacheSubscribed = 24,
  k_ESOMsg_CacheUnsubscribed = 25,
  k_ESOMsg_UpdateMultiple = 26,
  k_ESOMsg_CacheSubscriptionCheck = 27,
  k_ESOMsg_CacheSubscriptionRefresh = 28
};
bool ESOMsg_IsValid(int value);
const ESOMsg ESOMsg_MIN = k_ESOMsg_Create;
const ESOMsg ESOMsg_MAX = k_ESOMsg_CacheSubscriptionRefresh;
const int ESOMsg_ARRAYSIZE = ESOMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor();
inline const ::std::string& ESOMsg_Name(ESOMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESOMsg_descriptor(), value);
}
inline bool ESOMsg_Parse(
    const ::std::string& name, ESOMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESOMsg>(
    ESOMsg_descriptor(), name, value);
}
enum EGCBaseClientMsg {
  k_EMsgGCClientWelcome = 4004,
  k_EMsgGCServerWelcome = 4005,
  k_EMsgGCClientHello = 4006,
  k_EMsgGCServerHello = 4007,
  k_EMsgGCClientConnectionStatus = 4009,
  k_EMsgGCServerConnectionStatus = 4010,
  k_EMsgGCClientHelloPartner = 4011,
  k_EMsgGCClientHelloPW = 4012,
  k_EMsgGCClientHelloR2 = 4013,
  k_EMsgGCClientHelloR3 = 4014,
  k_EMsgGCClientHelloR4 = 4015
};
bool EGCBaseClientMsg_IsValid(int value);
const EGCBaseClientMsg EGCBaseClientMsg_MIN = k_EMsgGCClientWelcome;
const EGCBaseClientMsg EGCBaseClientMsg_MAX = k_EMsgGCClientHelloR4;
const int EGCBaseClientMsg_ARRAYSIZE = EGCBaseClientMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor();
inline const ::std::string& EGCBaseClientMsg_Name(EGCBaseClientMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCBaseClientMsg_descriptor(), value);
}
inline bool EGCBaseClientMsg_Parse(
    const ::std::string& name, EGCBaseClientMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCBaseClientMsg>(
    EGCBaseClientMsg_descriptor(), name, value);
}
enum EGCToGCMsg {
  k_EGCToGCMsgMasterAck = 150,
  k_EGCToGCMsgMasterAckResponse = 151,
  k_EGCToGCMsgRouted = 152,
  k_EGCToGCMsgRoutedReply = 153,
  k_EMsgUpdateSessionIP = 154,
  k_EMsgRequestSessionIP = 155,
  k_EMsgRequestSessionIPResponse = 156,
  k_EGCToGCMsgMasterStartupComplete = 157
};
bool EGCToGCMsg_IsValid(int value);
const EGCToGCMsg EGCToGCMsg_MIN = k_EGCToGCMsgMasterAck;
const EGCToGCMsg EGCToGCMsg_MAX = k_EGCToGCMsgMasterStartupComplete;
const int EGCToGCMsg_ARRAYSIZE = EGCToGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor();
inline const ::std::string& EGCToGCMsg_Name(EGCToGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCToGCMsg_descriptor(), value);
}
inline bool EGCToGCMsg_Parse(
    const ::std::string& name, EGCToGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCToGCMsg>(
    EGCToGCMsg_descriptor(), name, value);
}
enum ECommunityItemClass {
  k_ECommunityItemClass_Invalid = 0,
  k_ECommunityItemClass_Badge = 1,
  k_ECommunityItemClass_GameCard = 2,
  k_ECommunityItemClass_ProfileBackground = 3,
  k_ECommunityItemClass_Emoticon = 4,
  k_ECommunityItemClass_BoosterPack = 5,
  k_ECommunityItemClass_Consumable = 6,
  k_ECommunityItemClass_GameGoo = 7,
  k_ECommunityItemClass_ProfileModifier = 8,
  k_ECommunityItemClass_Scene = 9,
  k_ECommunityItemClass_SalienItem = 10
};
bool ECommunityItemClass_IsValid(int value);
const ECommunityItemClass ECommunityItemClass_MIN = k_ECommunityItemClass_Invalid;
const ECommunityItemClass ECommunityItemClass_MAX = k_ECommunityItemClass_SalienItem;
const int ECommunityItemClass_ARRAYSIZE = ECommunityItemClass_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECommunityItemClass_descriptor();
inline const ::std::string& ECommunityItemClass_Name(ECommunityItemClass value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECommunityItemClass_descriptor(), value);
}
inline bool ECommunityItemClass_Parse(
    const ::std::string& name, ECommunityItemClass* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECommunityItemClass>(
    ECommunityItemClass_descriptor(), name, value);
}
enum ECommunityItemAttribute {
  k_ECommunityItemAttribute_Invalid = 0,
  k_ECommunityItemAttribute_CardBorder = 1,
  k_ECommunityItemAttribute_Level = 2,
  k_ECommunityItemAttribute_IssueNumber = 3,
  k_ECommunityItemAttribute_TradableTime = 4,
  k_ECommunityItemAttribute_StorePackageID = 5,
  k_ECommunityItemAttribute_CommunityItemAppID = 6,
  k_ECommunityItemAttribute_CommunityItemType = 7,
  k_ECommunityItemAttribute_ProfileModiferEnabled = 8,
  k_ECommunityItemAttribute_ExpiryTime = 9
};
bool ECommunityItemAttribute_IsValid(int value);
const ECommunityItemAttribute ECommunityItemAttribute_MIN = k_ECommunityItemAttribute_Invalid;
const ECommunityItemAttribute ECommunityItemAttribute_MAX = k_ECommunityItemAttribute_ExpiryTime;
const int ECommunityItemAttribute_ARRAYSIZE = ECommunityItemAttribute_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECommunityItemAttribute_descriptor();
inline const ::std::string& ECommunityItemAttribute_Name(ECommunityItemAttribute value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECommunityItemAttribute_descriptor(), value);
}
inline bool ECommunityItemAttribute_Parse(
    const ::std::string& name, ECommunityItemAttribute* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECommunityItemAttribute>(
    ECommunityItemAttribute_descriptor(), name, value);
}
// ===================================================================

class CMsgGCHVacVerificationChange : public ::google::protobuf::Message {
 public:
  CMsgGCHVacVerificationChange();
  virtual ~CMsgGCHVacVerificationChange();

  CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from);

  inline CMsgGCHVacVerificationChange& operator=(const CMsgGCHVacVerificationChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHVacVerificationChange& default_instance();

  void Swap(CMsgGCHVacVerificationChange* other);

  // implements Message ----------------------------------------------

  CMsgGCHVacVerificationChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHVacVerificationChange& from);
  void MergeFrom(const CMsgGCHVacVerificationChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional bool is_verified = 3;
  inline bool has_is_verified() const;
  inline void clear_is_verified();
  static const int kIsVerifiedFieldNumber = 3;
  inline bool is_verified() const;
  inline void set_is_verified(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCHVacVerificationChange)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_is_verified();
  inline void clear_has_is_verified();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  bool is_verified_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHVacVerificationChange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCHAccountPhoneNumberChange : public ::google::protobuf::Message {
 public:
  CMsgGCHAccountPhoneNumberChange();
  virtual ~CMsgGCHAccountPhoneNumberChange();

  CMsgGCHAccountPhoneNumberChange(const CMsgGCHAccountPhoneNumberChange& from);

  inline CMsgGCHAccountPhoneNumberChange& operator=(const CMsgGCHAccountPhoneNumberChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHAccountPhoneNumberChange& default_instance();

  void Swap(CMsgGCHAccountPhoneNumberChange* other);

  // implements Message ----------------------------------------------

  CMsgGCHAccountPhoneNumberChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHAccountPhoneNumberChange& from);
  void MergeFrom(const CMsgGCHAccountPhoneNumberChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint64 phone_id = 3;
  inline bool has_phone_id() const;
  inline void clear_phone_id();
  static const int kPhoneIdFieldNumber = 3;
  inline ::google::protobuf::uint64 phone_id() const;
  inline void set_phone_id(::google::protobuf::uint64 value);

  // optional bool is_verified = 4;
  inline bool has_is_verified() const;
  inline void clear_is_verified();
  static const int kIsVerifiedFieldNumber = 4;
  inline bool is_verified() const;
  inline void set_is_verified(bool value);

  // optional bool is_identifying = 5;
  inline bool has_is_identifying() const;
  inline void clear_is_identifying();
  static const int kIsIdentifyingFieldNumber = 5;
  inline bool is_identifying() const;
  inline void set_is_identifying(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCHAccountPhoneNumberChange)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_phone_id();
  inline void clear_has_phone_id();
  inline void set_has_is_verified();
  inline void clear_has_is_verified();
  inline void set_has_is_identifying();
  inline void clear_has_is_identifying();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 phone_id_;
  ::google::protobuf::uint32 appid_;
  bool is_verified_;
  bool is_identifying_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHAccountPhoneNumberChange* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCHInviteUserToLobby : public ::google::protobuf::Message {
 public:
  CMsgGCHInviteUserToLobby();
  virtual ~CMsgGCHInviteUserToLobby();

  CMsgGCHInviteUserToLobby(const CMsgGCHInviteUserToLobby& from);

  inline CMsgGCHInviteUserToLobby& operator=(const CMsgGCHInviteUserToLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCHInviteUserToLobby& default_instance();

  void Swap(CMsgGCHInviteUserToLobby* other);

  // implements Message ----------------------------------------------

  CMsgGCHInviteUserToLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCHInviteUserToLobby& from);
  void MergeFrom(const CMsgGCHInviteUserToLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional fixed64 steamid_invited = 3;
  inline bool has_steamid_invited() const;
  inline void clear_steamid_invited();
  static const int kSteamidInvitedFieldNumber = 3;
  inline ::google::protobuf::uint64 steamid_invited() const;
  inline void set_steamid_invited(::google::protobuf::uint64 value);

  // optional fixed64 steamid_lobby = 4;
  inline bool has_steamid_lobby() const;
  inline void clear_steamid_lobby();
  static const int kSteamidLobbyFieldNumber = 4;
  inline ::google::protobuf::uint64 steamid_lobby() const;
  inline void set_steamid_lobby(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCHInviteUserToLobby)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_steamid_invited();
  inline void clear_has_steamid_invited();
  inline void set_has_steamid_lobby();
  inline void clear_has_steamid_lobby();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 steamid_invited_;
  ::google::protobuf::uint64 steamid_lobby_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCHInviteUserToLobby* default_instance_;
};
// -------------------------------------------------------------------

class CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute : public ::google::protobuf::Message {
 public:
  CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute();
  virtual ~CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute();

  CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from);

  inline CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& operator=(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& default_instance();

  void Swap(CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* other);

  // implements Message ----------------------------------------------

  CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from);
  void MergeFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 attribute = 1;
  inline bool has_attribute() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 1;
  inline ::google::protobuf::uint32 attribute() const;
  inline void set_attribute(::google::protobuf::uint32 value);

  // optional uint64 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint64 value() const;
  inline void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute)
 private:
  inline void set_has_attribute();
  inline void clear_has_attribute();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 attribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* default_instance_;
};
// -------------------------------------------------------------------

class CQuest_PublisherAddCommunityItemsToPlayer_Request : public ::google::protobuf::Message {
 public:
  CQuest_PublisherAddCommunityItemsToPlayer_Request();
  virtual ~CQuest_PublisherAddCommunityItemsToPlayer_Request();

  CQuest_PublisherAddCommunityItemsToPlayer_Request(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from);

  inline CQuest_PublisherAddCommunityItemsToPlayer_Request& operator=(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CQuest_PublisherAddCommunityItemsToPlayer_Request& default_instance();

  void Swap(CQuest_PublisherAddCommunityItemsToPlayer_Request* other);

  // implements Message ----------------------------------------------

  CQuest_PublisherAddCommunityItemsToPlayer_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from);
  void MergeFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute Attribute;

  // accessors -------------------------------------------------------

  // optional uint64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint32 match_item_type = 3;
  inline bool has_match_item_type() const;
  inline void clear_match_item_type();
  static const int kMatchItemTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 match_item_type() const;
  inline void set_match_item_type(::google::protobuf::uint32 value);

  // optional uint32 match_item_class = 4;
  inline bool has_match_item_class() const;
  inline void clear_match_item_class();
  static const int kMatchItemClassFieldNumber = 4;
  inline ::google::protobuf::uint32 match_item_class() const;
  inline void set_match_item_class(::google::protobuf::uint32 value);

  // optional string prefix_item_name = 5;
  inline bool has_prefix_item_name() const;
  inline void clear_prefix_item_name();
  static const int kPrefixItemNameFieldNumber = 5;
  inline const ::std::string& prefix_item_name() const;
  inline void set_prefix_item_name(const ::std::string& value);
  inline void set_prefix_item_name(const char* value);
  inline void set_prefix_item_name(const char* value, size_t size);
  inline ::std::string* mutable_prefix_item_name();
  inline ::std::string* release_prefix_item_name();
  inline void set_allocated_prefix_item_name(::std::string* prefix_item_name);

  // repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 6;
  inline const ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& attributes(int index) const;
  inline ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* mutable_attributes(int index);
  inline ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* add_attributes();
  inline const ::google::protobuf::RepeatedPtrField< ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute >&
      attributes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute >*
      mutable_attributes();

  // optional string note = 7;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 7;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const char* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  inline void set_allocated_note(::std::string* note);

  // @@protoc_insertion_point(class_scope:CQuest_PublisherAddCommunityItemsToPlayer_Request)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_match_item_type();
  inline void clear_has_match_item_type();
  inline void set_has_match_item_class();
  inline void clear_has_match_item_class();
  inline void set_has_prefix_item_name();
  inline void clear_has_prefix_item_name();
  inline void set_has_note();
  inline void clear_has_note();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 match_item_type_;
  ::std::string* prefix_item_name_;
  ::google::protobuf::RepeatedPtrField< ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute > attributes_;
  ::std::string* note_;
  ::google::protobuf::uint32 match_item_class_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CQuest_PublisherAddCommunityItemsToPlayer_Request* default_instance_;
};
// -------------------------------------------------------------------

class CQuest_PublisherAddCommunityItemsToPlayer_Response : public ::google::protobuf::Message {
 public:
  CQuest_PublisherAddCommunityItemsToPlayer_Response();
  virtual ~CQuest_PublisherAddCommunityItemsToPlayer_Response();

  CQuest_PublisherAddCommunityItemsToPlayer_Response(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from);

  inline CQuest_PublisherAddCommunityItemsToPlayer_Response& operator=(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CQuest_PublisherAddCommunityItemsToPlayer_Response& default_instance();

  void Swap(CQuest_PublisherAddCommunityItemsToPlayer_Response* other);

  // implements Message ----------------------------------------------

  CQuest_PublisherAddCommunityItemsToPlayer_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from);
  void MergeFrom(const CQuest_PublisherAddCommunityItemsToPlayer_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 items_matched = 1;
  inline bool has_items_matched() const;
  inline void clear_items_matched();
  static const int kItemsMatchedFieldNumber = 1;
  inline ::google::protobuf::uint32 items_matched() const;
  inline void set_items_matched(::google::protobuf::uint32 value);

  // optional uint32 items_granted = 2;
  inline bool has_items_granted() const;
  inline void clear_items_granted();
  static const int kItemsGrantedFieldNumber = 2;
  inline ::google::protobuf::uint32 items_granted() const;
  inline void set_items_granted(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CQuest_PublisherAddCommunityItemsToPlayer_Response)
 private:
  inline void set_has_items_matched();
  inline void clear_has_items_matched();
  inline void set_has_items_granted();
  inline void clear_has_items_granted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 items_matched_;
  ::google::protobuf::uint32 items_granted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CQuest_PublisherAddCommunityItemsToPlayer_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GamePersonalDataCategoryInfo : public ::google::protobuf::Message {
 public:
  CCommunity_GamePersonalDataCategoryInfo();
  virtual ~CCommunity_GamePersonalDataCategoryInfo();

  CCommunity_GamePersonalDataCategoryInfo(const CCommunity_GamePersonalDataCategoryInfo& from);

  inline CCommunity_GamePersonalDataCategoryInfo& operator=(const CCommunity_GamePersonalDataCategoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GamePersonalDataCategoryInfo& default_instance();

  void Swap(CCommunity_GamePersonalDataCategoryInfo* other);

  // implements Message ----------------------------------------------

  CCommunity_GamePersonalDataCategoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GamePersonalDataCategoryInfo& from);
  void MergeFrom(const CCommunity_GamePersonalDataCategoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // optional string localization_token = 2;
  inline bool has_localization_token() const;
  inline void clear_localization_token();
  static const int kLocalizationTokenFieldNumber = 2;
  inline const ::std::string& localization_token() const;
  inline void set_localization_token(const ::std::string& value);
  inline void set_localization_token(const char* value);
  inline void set_localization_token(const char* value, size_t size);
  inline ::std::string* mutable_localization_token();
  inline ::std::string* release_localization_token();
  inline void set_allocated_localization_token(::std::string* localization_token);

  // optional string template_file = 3;
  inline bool has_template_file() const;
  inline void clear_template_file();
  static const int kTemplateFileFieldNumber = 3;
  inline const ::std::string& template_file() const;
  inline void set_template_file(const ::std::string& value);
  inline void set_template_file(const char* value);
  inline void set_template_file(const char* value, size_t size);
  inline ::std::string* mutable_template_file();
  inline ::std::string* release_template_file();
  inline void set_allocated_template_file(::std::string* template_file);

  // @@protoc_insertion_point(class_scope:CCommunity_GamePersonalDataCategoryInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_localization_token();
  inline void clear_has_localization_token();
  inline void set_has_template_file();
  inline void clear_has_template_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* type_;
  ::std::string* localization_token_;
  ::std::string* template_file_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_GamePersonalDataCategoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataCategories_Request : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataCategories_Request();
  virtual ~CCommunity_GetGamePersonalDataCategories_Request();

  CCommunity_GetGamePersonalDataCategories_Request(const CCommunity_GetGamePersonalDataCategories_Request& from);

  inline CCommunity_GetGamePersonalDataCategories_Request& operator=(const CCommunity_GetGamePersonalDataCategories_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataCategories_Request& default_instance();

  void Swap(CCommunity_GetGamePersonalDataCategories_Request* other);

  // implements Message ----------------------------------------------

  CCommunity_GetGamePersonalDataCategories_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataCategories_Request& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataCategories_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataCategories_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataCategories_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataCategories_Response : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataCategories_Response();
  virtual ~CCommunity_GetGamePersonalDataCategories_Response();

  CCommunity_GetGamePersonalDataCategories_Response(const CCommunity_GetGamePersonalDataCategories_Response& from);

  inline CCommunity_GetGamePersonalDataCategories_Response& operator=(const CCommunity_GetGamePersonalDataCategories_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataCategories_Response& default_instance();

  void Swap(CCommunity_GetGamePersonalDataCategories_Response* other);

  // implements Message ----------------------------------------------

  CCommunity_GetGamePersonalDataCategories_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataCategories_Response& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataCategories_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
  inline int categories_size() const;
  inline void clear_categories();
  static const int kCategoriesFieldNumber = 1;
  inline const ::CCommunity_GamePersonalDataCategoryInfo& categories(int index) const;
  inline ::CCommunity_GamePersonalDataCategoryInfo* mutable_categories(int index);
  inline ::CCommunity_GamePersonalDataCategoryInfo* add_categories();
  inline const ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >&
      categories() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >*
      mutable_categories();

  // optional string app_assets_basename = 2;
  inline bool has_app_assets_basename() const;
  inline void clear_app_assets_basename();
  static const int kAppAssetsBasenameFieldNumber = 2;
  inline const ::std::string& app_assets_basename() const;
  inline void set_app_assets_basename(const ::std::string& value);
  inline void set_app_assets_basename(const char* value);
  inline void set_app_assets_basename(const char* value, size_t size);
  inline ::std::string* mutable_app_assets_basename();
  inline ::std::string* release_app_assets_basename();
  inline void set_allocated_app_assets_basename(::std::string* app_assets_basename);

  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataCategories_Response)
 private:
  inline void set_has_app_assets_basename();
  inline void clear_has_app_assets_basename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo > categories_;
  ::std::string* app_assets_basename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataCategories_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataEntries_Request : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataEntries_Request();
  virtual ~CCommunity_GetGamePersonalDataEntries_Request();

  CCommunity_GetGamePersonalDataEntries_Request(const CCommunity_GetGamePersonalDataEntries_Request& from);

  inline CCommunity_GetGamePersonalDataEntries_Request& operator=(const CCommunity_GetGamePersonalDataEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataEntries_Request& default_instance();

  void Swap(CCommunity_GetGamePersonalDataEntries_Request* other);

  // implements Message ----------------------------------------------

  CCommunity_GetGamePersonalDataEntries_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataEntries_Request& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataEntries_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional string type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  inline void set_allocated_type(::std::string* type);

  // optional string continue_token = 4;
  inline bool has_continue_token() const;
  inline void clear_continue_token();
  static const int kContinueTokenFieldNumber = 4;
  inline const ::std::string& continue_token() const;
  inline void set_continue_token(const ::std::string& value);
  inline void set_continue_token(const char* value);
  inline void set_continue_token(const char* value, size_t size);
  inline ::std::string* mutable_continue_token();
  inline ::std::string* release_continue_token();
  inline void set_allocated_continue_token(::std::string* continue_token);

  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataEntries_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_continue_token();
  inline void clear_has_continue_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::std::string* type_;
  ::std::string* continue_token_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataEntries_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_GetGamePersonalDataEntries_Response : public ::google::protobuf::Message {
 public:
  CCommunity_GetGamePersonalDataEntries_Response();
  virtual ~CCommunity_GetGamePersonalDataEntries_Response();

  CCommunity_GetGamePersonalDataEntries_Response(const CCommunity_GetGamePersonalDataEntries_Response& from);

  inline CCommunity_GetGamePersonalDataEntries_Response& operator=(const CCommunity_GetGamePersonalDataEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_GetGamePersonalDataEntries_Response& default_instance();

  void Swap(CCommunity_GetGamePersonalDataEntries_Response* other);

  // implements Message ----------------------------------------------

  CCommunity_GetGamePersonalDataEntries_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_GetGamePersonalDataEntries_Response& from);
  void MergeFrom(const CCommunity_GetGamePersonalDataEntries_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gceresult = 1;
  inline bool has_gceresult() const;
  inline void clear_gceresult();
  static const int kGceresultFieldNumber = 1;
  inline ::google::protobuf::uint32 gceresult() const;
  inline void set_gceresult(::google::protobuf::uint32 value);

  // repeated string entries = 2;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 2;
  inline const ::std::string& entries(int index) const;
  inline ::std::string* mutable_entries(int index);
  inline void set_entries(int index, const ::std::string& value);
  inline void set_entries(int index, const char* value);
  inline void set_entries(int index, const char* value, size_t size);
  inline ::std::string* add_entries();
  inline void add_entries(const ::std::string& value);
  inline void add_entries(const char* value);
  inline void add_entries(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entries();

  // optional string continue_token = 3;
  inline bool has_continue_token() const;
  inline void clear_continue_token();
  static const int kContinueTokenFieldNumber = 3;
  inline const ::std::string& continue_token() const;
  inline void set_continue_token(const ::std::string& value);
  inline void set_continue_token(const char* value);
  inline void set_continue_token(const char* value, size_t size);
  inline ::std::string* mutable_continue_token();
  inline ::std::string* release_continue_token();
  inline void set_allocated_continue_token(::std::string* continue_token);

  // @@protoc_insertion_point(class_scope:CCommunity_GetGamePersonalDataEntries_Response)
 private:
  inline void set_has_gceresult();
  inline void clear_has_gceresult();
  inline void set_has_continue_token();
  inline void clear_has_continue_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> entries_;
  ::std::string* continue_token_;
  ::google::protobuf::uint32 gceresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_GetGamePersonalDataEntries_Response* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_TerminateGamePersonalDataEntries_Request : public ::google::protobuf::Message {
 public:
  CCommunity_TerminateGamePersonalDataEntries_Request();
  virtual ~CCommunity_TerminateGamePersonalDataEntries_Request();

  CCommunity_TerminateGamePersonalDataEntries_Request(const CCommunity_TerminateGamePersonalDataEntries_Request& from);

  inline CCommunity_TerminateGamePersonalDataEntries_Request& operator=(const CCommunity_TerminateGamePersonalDataEntries_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_TerminateGamePersonalDataEntries_Request& default_instance();

  void Swap(CCommunity_TerminateGamePersonalDataEntries_Request* other);

  // implements Message ----------------------------------------------

  CCommunity_TerminateGamePersonalDataEntries_Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Request& from);
  void MergeFrom(const CCommunity_TerminateGamePersonalDataEntries_Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint64 steamid = 2;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CCommunity_TerminateGamePersonalDataEntries_Request)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_TerminateGamePersonalDataEntries_Request* default_instance_;
};
// -------------------------------------------------------------------

class CCommunity_TerminateGamePersonalDataEntries_Response : public ::google::protobuf::Message {
 public:
  CCommunity_TerminateGamePersonalDataEntries_Response();
  virtual ~CCommunity_TerminateGamePersonalDataEntries_Response();

  CCommunity_TerminateGamePersonalDataEntries_Response(const CCommunity_TerminateGamePersonalDataEntries_Response& from);

  inline CCommunity_TerminateGamePersonalDataEntries_Response& operator=(const CCommunity_TerminateGamePersonalDataEntries_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCommunity_TerminateGamePersonalDataEntries_Response& default_instance();

  void Swap(CCommunity_TerminateGamePersonalDataEntries_Response* other);

  // implements Message ----------------------------------------------

  CCommunity_TerminateGamePersonalDataEntries_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCommunity_TerminateGamePersonalDataEntries_Response& from);
  void MergeFrom(const CCommunity_TerminateGamePersonalDataEntries_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gceresult = 1;
  inline bool has_gceresult() const;
  inline void clear_gceresult();
  static const int kGceresultFieldNumber = 1;
  inline ::google::protobuf::uint32 gceresult() const;
  inline void set_gceresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CCommunity_TerminateGamePersonalDataEntries_Response)
 private:
  inline void set_has_gceresult();
  inline void clear_has_gceresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 gceresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gcsystemmsgs_2eproto();
  friend void protobuf_AssignDesc_gcsystemmsgs_2eproto();
  friend void protobuf_ShutdownFile_gcsystemmsgs_2eproto();

  void InitAsDefaultInstance();
  static CCommunity_TerminateGamePersonalDataEntries_Response* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgGCHVacVerificationChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHVacVerificationChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHVacVerificationChange::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHVacVerificationChange::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHVacVerificationChange::steamid() const {
  return steamid_;
}
inline void CMsgGCHVacVerificationChange::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CMsgGCHVacVerificationChange::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHVacVerificationChange::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHVacVerificationChange::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHVacVerificationChange::appid() const {
  return appid_;
}
inline void CMsgGCHVacVerificationChange::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional bool is_verified = 3;
inline bool CMsgGCHVacVerificationChange::has_is_verified() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHVacVerificationChange::set_has_is_verified() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHVacVerificationChange::clear_has_is_verified() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHVacVerificationChange::clear_is_verified() {
  is_verified_ = false;
  clear_has_is_verified();
}
inline bool CMsgGCHVacVerificationChange::is_verified() const {
  return is_verified_;
}
inline void CMsgGCHVacVerificationChange::set_is_verified(bool value) {
  set_has_is_verified();
  is_verified_ = value;
}

// -------------------------------------------------------------------

// CMsgGCHAccountPhoneNumberChange

// optional fixed64 steamid = 1;
inline bool CMsgGCHAccountPhoneNumberChange::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHAccountPhoneNumberChange::steamid() const {
  return steamid_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CMsgGCHAccountPhoneNumberChange::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHAccountPhoneNumberChange::appid() const {
  return appid_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint64 phone_id = 3;
inline bool CMsgGCHAccountPhoneNumberChange::has_phone_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_phone_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_phone_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_phone_id() {
  phone_id_ = GOOGLE_ULONGLONG(0);
  clear_has_phone_id();
}
inline ::google::protobuf::uint64 CMsgGCHAccountPhoneNumberChange::phone_id() const {
  return phone_id_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_phone_id(::google::protobuf::uint64 value) {
  set_has_phone_id();
  phone_id_ = value;
}

// optional bool is_verified = 4;
inline bool CMsgGCHAccountPhoneNumberChange::has_is_verified() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_is_verified() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_is_verified() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_is_verified() {
  is_verified_ = false;
  clear_has_is_verified();
}
inline bool CMsgGCHAccountPhoneNumberChange::is_verified() const {
  return is_verified_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_is_verified(bool value) {
  set_has_is_verified();
  is_verified_ = value;
}

// optional bool is_identifying = 5;
inline bool CMsgGCHAccountPhoneNumberChange::has_is_identifying() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCHAccountPhoneNumberChange::set_has_is_identifying() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_has_is_identifying() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCHAccountPhoneNumberChange::clear_is_identifying() {
  is_identifying_ = false;
  clear_has_is_identifying();
}
inline bool CMsgGCHAccountPhoneNumberChange::is_identifying() const {
  return is_identifying_;
}
inline void CMsgGCHAccountPhoneNumberChange::set_is_identifying(bool value) {
  set_has_is_identifying();
  is_identifying_ = value;
}

// -------------------------------------------------------------------

// CMsgGCHInviteUserToLobby

// optional fixed64 steamid = 1;
inline bool CMsgGCHInviteUserToLobby::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid() const {
  return steamid_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CMsgGCHInviteUserToLobby::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCHInviteUserToLobby::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCHInviteUserToLobby::appid() const {
  return appid_;
}
inline void CMsgGCHInviteUserToLobby::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional fixed64 steamid_invited = 3;
inline bool CMsgGCHInviteUserToLobby::has_steamid_invited() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid_invited() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid_invited() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid_invited() {
  steamid_invited_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_invited();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid_invited() const {
  return steamid_invited_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid_invited(::google::protobuf::uint64 value) {
  set_has_steamid_invited();
  steamid_invited_ = value;
}

// optional fixed64 steamid_lobby = 4;
inline bool CMsgGCHInviteUserToLobby::has_steamid_lobby() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCHInviteUserToLobby::set_has_steamid_lobby() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCHInviteUserToLobby::clear_has_steamid_lobby() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCHInviteUserToLobby::clear_steamid_lobby() {
  steamid_lobby_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_lobby();
}
inline ::google::protobuf::uint64 CMsgGCHInviteUserToLobby::steamid_lobby() const {
  return steamid_lobby_;
}
inline void CMsgGCHInviteUserToLobby::set_steamid_lobby(::google::protobuf::uint64 value) {
  set_has_steamid_lobby();
  steamid_lobby_ = value;
}

// -------------------------------------------------------------------

// CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute

// optional uint32 attribute = 1;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::has_attribute() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::set_has_attribute() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::clear_has_attribute() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::clear_attribute() {
  attribute_ = 0u;
  clear_has_attribute();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::attribute() const {
  return attribute_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::set_attribute(::google::protobuf::uint32 value) {
  set_has_attribute();
  attribute_ = value;
}

// optional uint64 value = 2;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::value() const {
  return value_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CQuest_PublisherAddCommunityItemsToPlayer_Request

// optional uint64 steamid = 1;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CQuest_PublisherAddCommunityItemsToPlayer_Request::steamid() const {
  return steamid_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Request::appid() const {
  return appid_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint32 match_item_type = 3;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_match_item_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_match_item_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_match_item_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_match_item_type() {
  match_item_type_ = 0u;
  clear_has_match_item_type();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Request::match_item_type() const {
  return match_item_type_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_match_item_type(::google::protobuf::uint32 value) {
  set_has_match_item_type();
  match_item_type_ = value;
}

// optional uint32 match_item_class = 4;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_match_item_class() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_match_item_class() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_match_item_class() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_match_item_class() {
  match_item_class_ = 0u;
  clear_has_match_item_class();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Request::match_item_class() const {
  return match_item_class_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_match_item_class(::google::protobuf::uint32 value) {
  set_has_match_item_class();
  match_item_class_ = value;
}

// optional string prefix_item_name = 5;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_prefix_item_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_prefix_item_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_prefix_item_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_prefix_item_name() {
  if (prefix_item_name_ != &::google::protobuf::internal::kEmptyString) {
    prefix_item_name_->clear();
  }
  clear_has_prefix_item_name();
}
inline const ::std::string& CQuest_PublisherAddCommunityItemsToPlayer_Request::prefix_item_name() const {
  return *prefix_item_name_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_prefix_item_name(const ::std::string& value) {
  set_has_prefix_item_name();
  if (prefix_item_name_ == &::google::protobuf::internal::kEmptyString) {
    prefix_item_name_ = new ::std::string;
  }
  prefix_item_name_->assign(value);
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_prefix_item_name(const char* value) {
  set_has_prefix_item_name();
  if (prefix_item_name_ == &::google::protobuf::internal::kEmptyString) {
    prefix_item_name_ = new ::std::string;
  }
  prefix_item_name_->assign(value);
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_prefix_item_name(const char* value, size_t size) {
  set_has_prefix_item_name();
  if (prefix_item_name_ == &::google::protobuf::internal::kEmptyString) {
    prefix_item_name_ = new ::std::string;
  }
  prefix_item_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CQuest_PublisherAddCommunityItemsToPlayer_Request::mutable_prefix_item_name() {
  set_has_prefix_item_name();
  if (prefix_item_name_ == &::google::protobuf::internal::kEmptyString) {
    prefix_item_name_ = new ::std::string;
  }
  return prefix_item_name_;
}
inline ::std::string* CQuest_PublisherAddCommunityItemsToPlayer_Request::release_prefix_item_name() {
  clear_has_prefix_item_name();
  if (prefix_item_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = prefix_item_name_;
    prefix_item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_allocated_prefix_item_name(::std::string* prefix_item_name) {
  if (prefix_item_name_ != &::google::protobuf::internal::kEmptyString) {
    delete prefix_item_name_;
  }
  if (prefix_item_name) {
    set_has_prefix_item_name();
    prefix_item_name_ = prefix_item_name;
  } else {
    clear_has_prefix_item_name();
    prefix_item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .CQuest_PublisherAddCommunityItemsToPlayer_Request.Attribute attributes = 6;
inline int CQuest_PublisherAddCommunityItemsToPlayer_Request::attributes_size() const {
  return attributes_.size();
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_attributes() {
  attributes_.Clear();
}
inline const ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute& CQuest_PublisherAddCommunityItemsToPlayer_Request::attributes(int index) const {
  return attributes_.Get(index);
}
inline ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* CQuest_PublisherAddCommunityItemsToPlayer_Request::mutable_attributes(int index) {
  return attributes_.Mutable(index);
}
inline ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute* CQuest_PublisherAddCommunityItemsToPlayer_Request::add_attributes() {
  return attributes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute >&
CQuest_PublisherAddCommunityItemsToPlayer_Request::attributes() const {
  return attributes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CQuest_PublisherAddCommunityItemsToPlayer_Request_Attribute >*
CQuest_PublisherAddCommunityItemsToPlayer_Request::mutable_attributes() {
  return &attributes_;
}

// optional string note = 7;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Request::has_note() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_has_note() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_has_note() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::clear_note() {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& CQuest_PublisherAddCommunityItemsToPlayer_Request::note() const {
  return *note_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_note(const char* value, size_t size) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CQuest_PublisherAddCommunityItemsToPlayer_Request::mutable_note() {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  return note_;
}
inline ::std::string* CQuest_PublisherAddCommunityItemsToPlayer_Request::release_note() {
  clear_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Request::set_allocated_note(::std::string* note) {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    delete note_;
  }
  if (note) {
    set_has_note();
    note_ = note;
  } else {
    clear_has_note();
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CQuest_PublisherAddCommunityItemsToPlayer_Response

// optional uint32 items_matched = 1;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Response::has_items_matched() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::set_has_items_matched() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::clear_has_items_matched() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::clear_items_matched() {
  items_matched_ = 0u;
  clear_has_items_matched();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Response::items_matched() const {
  return items_matched_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::set_items_matched(::google::protobuf::uint32 value) {
  set_has_items_matched();
  items_matched_ = value;
}

// optional uint32 items_granted = 2;
inline bool CQuest_PublisherAddCommunityItemsToPlayer_Response::has_items_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::set_has_items_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::clear_has_items_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::clear_items_granted() {
  items_granted_ = 0u;
  clear_has_items_granted();
}
inline ::google::protobuf::uint32 CQuest_PublisherAddCommunityItemsToPlayer_Response::items_granted() const {
  return items_granted_;
}
inline void CQuest_PublisherAddCommunityItemsToPlayer_Response::set_items_granted(::google::protobuf::uint32 value) {
  set_has_items_granted();
  items_granted_ = value;
}

// -------------------------------------------------------------------

// CCommunity_GamePersonalDataCategoryInfo

// optional string type = 1;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_type() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::type() const {
  return *type_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  return type_;
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string localization_token = 2;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_localization_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_has_localization_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_has_localization_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_localization_token() {
  if (localization_token_ != &::google::protobuf::internal::kEmptyString) {
    localization_token_->clear();
  }
  clear_has_localization_token();
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::localization_token() const {
  return *localization_token_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const ::std::string& value) {
  set_has_localization_token();
  if (localization_token_ == &::google::protobuf::internal::kEmptyString) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const char* value) {
  set_has_localization_token();
  if (localization_token_ == &::google::protobuf::internal::kEmptyString) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_localization_token(const char* value, size_t size) {
  set_has_localization_token();
  if (localization_token_ == &::google::protobuf::internal::kEmptyString) {
    localization_token_ = new ::std::string;
  }
  localization_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_localization_token() {
  set_has_localization_token();
  if (localization_token_ == &::google::protobuf::internal::kEmptyString) {
    localization_token_ = new ::std::string;
  }
  return localization_token_;
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::release_localization_token() {
  clear_has_localization_token();
  if (localization_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = localization_token_;
    localization_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_allocated_localization_token(::std::string* localization_token) {
  if (localization_token_ != &::google::protobuf::internal::kEmptyString) {
    delete localization_token_;
  }
  if (localization_token) {
    set_has_localization_token();
    localization_token_ = localization_token;
  } else {
    clear_has_localization_token();
    localization_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string template_file = 3;
inline bool CCommunity_GamePersonalDataCategoryInfo::has_template_file() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_has_template_file() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_has_template_file() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCommunity_GamePersonalDataCategoryInfo::clear_template_file() {
  if (template_file_ != &::google::protobuf::internal::kEmptyString) {
    template_file_->clear();
  }
  clear_has_template_file();
}
inline const ::std::string& CCommunity_GamePersonalDataCategoryInfo::template_file() const {
  return *template_file_;
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const ::std::string& value) {
  set_has_template_file();
  if (template_file_ == &::google::protobuf::internal::kEmptyString) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const char* value) {
  set_has_template_file();
  if (template_file_ == &::google::protobuf::internal::kEmptyString) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(value);
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_template_file(const char* value, size_t size) {
  set_has_template_file();
  if (template_file_ == &::google::protobuf::internal::kEmptyString) {
    template_file_ = new ::std::string;
  }
  template_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::mutable_template_file() {
  set_has_template_file();
  if (template_file_ == &::google::protobuf::internal::kEmptyString) {
    template_file_ = new ::std::string;
  }
  return template_file_;
}
inline ::std::string* CCommunity_GamePersonalDataCategoryInfo::release_template_file() {
  clear_has_template_file();
  if (template_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = template_file_;
    template_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GamePersonalDataCategoryInfo::set_allocated_template_file(::std::string* template_file) {
  if (template_file_ != &::google::protobuf::internal::kEmptyString) {
    delete template_file_;
  }
  if (template_file) {
    set_has_template_file();
    template_file_ = template_file;
  } else {
    clear_has_template_file();
    template_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataCategories_Request

// optional uint32 appid = 1;
inline bool CCommunity_GetGamePersonalDataCategories_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_GetGamePersonalDataCategories_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_GetGamePersonalDataCategories_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_GetGamePersonalDataCategories_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataCategories_Request::appid() const {
  return appid_;
}
inline void CCommunity_GetGamePersonalDataCategories_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataCategories_Response

// repeated .CCommunity_GamePersonalDataCategoryInfo categories = 1;
inline int CCommunity_GetGamePersonalDataCategories_Response::categories_size() const {
  return categories_.size();
}
inline void CCommunity_GetGamePersonalDataCategories_Response::clear_categories() {
  categories_.Clear();
}
inline const ::CCommunity_GamePersonalDataCategoryInfo& CCommunity_GetGamePersonalDataCategories_Response::categories(int index) const {
  return categories_.Get(index);
}
inline ::CCommunity_GamePersonalDataCategoryInfo* CCommunity_GetGamePersonalDataCategories_Response::mutable_categories(int index) {
  return categories_.Mutable(index);
}
inline ::CCommunity_GamePersonalDataCategoryInfo* CCommunity_GetGamePersonalDataCategories_Response::add_categories() {
  return categories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >&
CCommunity_GetGamePersonalDataCategories_Response::categories() const {
  return categories_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCommunity_GamePersonalDataCategoryInfo >*
CCommunity_GetGamePersonalDataCategories_Response::mutable_categories() {
  return &categories_;
}

// optional string app_assets_basename = 2;
inline bool CCommunity_GetGamePersonalDataCategories_Response::has_app_assets_basename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_has_app_assets_basename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCommunity_GetGamePersonalDataCategories_Response::clear_has_app_assets_basename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCommunity_GetGamePersonalDataCategories_Response::clear_app_assets_basename() {
  if (app_assets_basename_ != &::google::protobuf::internal::kEmptyString) {
    app_assets_basename_->clear();
  }
  clear_has_app_assets_basename();
}
inline const ::std::string& CCommunity_GetGamePersonalDataCategories_Response::app_assets_basename() const {
  return *app_assets_basename_;
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const ::std::string& value) {
  set_has_app_assets_basename();
  if (app_assets_basename_ == &::google::protobuf::internal::kEmptyString) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(value);
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const char* value) {
  set_has_app_assets_basename();
  if (app_assets_basename_ == &::google::protobuf::internal::kEmptyString) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(value);
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_app_assets_basename(const char* value, size_t size) {
  set_has_app_assets_basename();
  if (app_assets_basename_ == &::google::protobuf::internal::kEmptyString) {
    app_assets_basename_ = new ::std::string;
  }
  app_assets_basename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataCategories_Response::mutable_app_assets_basename() {
  set_has_app_assets_basename();
  if (app_assets_basename_ == &::google::protobuf::internal::kEmptyString) {
    app_assets_basename_ = new ::std::string;
  }
  return app_assets_basename_;
}
inline ::std::string* CCommunity_GetGamePersonalDataCategories_Response::release_app_assets_basename() {
  clear_has_app_assets_basename();
  if (app_assets_basename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = app_assets_basename_;
    app_assets_basename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GetGamePersonalDataCategories_Response::set_allocated_app_assets_basename(::std::string* app_assets_basename) {
  if (app_assets_basename_ != &::google::protobuf::internal::kEmptyString) {
    delete app_assets_basename_;
  }
  if (app_assets_basename) {
    set_has_app_assets_basename();
    app_assets_basename_ = app_assets_basename;
  } else {
    clear_has_app_assets_basename();
    app_assets_basename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataEntries_Request

// optional uint32 appid = 1;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataEntries_Request::appid() const {
  return appid_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint64 steamid = 2;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CCommunity_GetGamePersonalDataEntries_Request::steamid() const {
  return steamid_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional string type = 3;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_type() {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    type_->clear();
  }
  clear_has_type();
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Request::type() const {
  return *type_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const ::std::string& value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const char* value) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_type(const char* value, size_t size) {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::mutable_type() {
  set_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    type_ = new ::std::string;
  }
  return type_;
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::release_type() {
  clear_has_type();
  if (type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = type_;
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_allocated_type(::std::string* type) {
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (type) {
    set_has_type();
    type_ = type;
  } else {
    clear_has_type();
    type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string continue_token = 4;
inline bool CCommunity_GetGamePersonalDataEntries_Request::has_continue_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_has_continue_token() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_has_continue_token() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::clear_continue_token() {
  if (continue_token_ != &::google::protobuf::internal::kEmptyString) {
    continue_token_->clear();
  }
  clear_has_continue_token();
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Request::continue_token() const {
  return *continue_token_;
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const ::std::string& value) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const char* value) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_continue_token(const char* value, size_t size) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::mutable_continue_token() {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  return continue_token_;
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Request::release_continue_token() {
  clear_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = continue_token_;
    continue_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GetGamePersonalDataEntries_Request::set_allocated_continue_token(::std::string* continue_token) {
  if (continue_token_ != &::google::protobuf::internal::kEmptyString) {
    delete continue_token_;
  }
  if (continue_token) {
    set_has_continue_token();
    continue_token_ = continue_token;
  } else {
    clear_has_continue_token();
    continue_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCommunity_GetGamePersonalDataEntries_Response

// optional uint32 gceresult = 1;
inline bool CCommunity_GetGamePersonalDataEntries_Response::has_gceresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_has_gceresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_has_gceresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_gceresult() {
  gceresult_ = 0u;
  clear_has_gceresult();
}
inline ::google::protobuf::uint32 CCommunity_GetGamePersonalDataEntries_Response::gceresult() const {
  return gceresult_;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_gceresult(::google::protobuf::uint32 value) {
  set_has_gceresult();
  gceresult_ = value;
}

// repeated string entries = 2;
inline int CCommunity_GetGamePersonalDataEntries_Response::entries_size() const {
  return entries_.size();
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_entries() {
  entries_.Clear();
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Response::entries(int index) const {
  return entries_.Get(index);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const ::std::string& value) {
  entries_.Mutable(index)->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const char* value) {
  entries_.Mutable(index)->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::add_entries() {
  return entries_.Add();
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const char* value) {
  entries_.Add()->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCommunity_GetGamePersonalDataEntries_Response::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCommunity_GetGamePersonalDataEntries_Response::mutable_entries() {
  return &entries_;
}

// optional string continue_token = 3;
inline bool CCommunity_GetGamePersonalDataEntries_Response::has_continue_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_has_continue_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_has_continue_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::clear_continue_token() {
  if (continue_token_ != &::google::protobuf::internal::kEmptyString) {
    continue_token_->clear();
  }
  clear_has_continue_token();
}
inline const ::std::string& CCommunity_GetGamePersonalDataEntries_Response::continue_token() const {
  return *continue_token_;
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const ::std::string& value) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const char* value) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(value);
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_continue_token(const char* value, size_t size) {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  continue_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::mutable_continue_token() {
  set_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    continue_token_ = new ::std::string;
  }
  return continue_token_;
}
inline ::std::string* CCommunity_GetGamePersonalDataEntries_Response::release_continue_token() {
  clear_has_continue_token();
  if (continue_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = continue_token_;
    continue_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCommunity_GetGamePersonalDataEntries_Response::set_allocated_continue_token(::std::string* continue_token) {
  if (continue_token_ != &::google::protobuf::internal::kEmptyString) {
    delete continue_token_;
  }
  if (continue_token) {
    set_has_continue_token();
    continue_token_ = continue_token;
  } else {
    clear_has_continue_token();
    continue_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCommunity_TerminateGamePersonalDataEntries_Request

// optional uint32 appid = 1;
inline bool CCommunity_TerminateGamePersonalDataEntries_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCommunity_TerminateGamePersonalDataEntries_Request::appid() const {
  return appid_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint64 steamid = 2;
inline bool CCommunity_TerminateGamePersonalDataEntries_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CCommunity_TerminateGamePersonalDataEntries_Request::steamid() const {
  return steamid_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CCommunity_TerminateGamePersonalDataEntries_Response

// optional uint32 gceresult = 1;
inline bool CCommunity_TerminateGamePersonalDataEntries_Response::has_gceresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::set_has_gceresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::clear_has_gceresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::clear_gceresult() {
  gceresult_ = 0u;
  clear_has_gceresult();
}
inline ::google::protobuf::uint32 CCommunity_TerminateGamePersonalDataEntries_Response::gceresult() const {
  return gceresult_;
}
inline void CCommunity_TerminateGamePersonalDataEntries_Response::set_gceresult(::google::protobuf::uint32 value) {
  set_has_gceresult();
  gceresult_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCSystemMsg>() {
  return ::EGCSystemMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESOMsg>() {
  return ::ESOMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCBaseClientMsg>() {
  return ::EGCBaseClientMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCToGCMsg>() {
  return ::EGCToGCMsg_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECommunityItemClass>() {
  return ::ECommunityItemClass_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECommunityItemAttribute>() {
  return ::ECommunityItemAttribute_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcsystemmsgs_2eproto__INCLUDED
